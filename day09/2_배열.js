/*
    - 타입
        각 프로그래밍 언어들이 데이터들을 분류하는 것
        ex)분리수거 구분 방법 (페트병 종이 유리 병 ...)
            문자 : "text" , 'text' , `text`
            숫자 : 123, 645.1, 797
            불리언 : true, false
            배열 : [ ]
    - 배열
        - 나열 : 열거하기 위해 하나씩 줄로 하는 것
        - 열거 : 여러가지를 낱낱이 늘어놓음
        1. 배열이란?
            순서대로 번호가 붙은 원소들이 연속적인 형태로 구성된 *타입*

        2. 인덱스란?
            순서대로 배정된 번호, 0번 부터 시작
                ex)길이/총갯수 = 3개 / 인덱스 0,1,2

        3. 배열 선언 : [ ]대괄호 사용
            [ ]대괄호 안에서 쉼표를 이용한 값을 구분하여 열거한다.
                let 변수명 = [값1, 값2, 값3]

        4. 배열 전체 호출
            변수명

        5. 배열내 특정한 위치의 요소(값) 호출
            변수명[인덱스]

        6. 배열내 특정한 위치의 요소(값) 수정
            1. 전체 수정
                배열변수명 = [새로운배열]
            2. 특청한 위치의 요소(값) 부분 수정
                배열변수명[인덱스] = 새로운 값

        7. 배열내 새로운 값 추가
            배열변수명.push(새로운 값)

        8. 배열 내 요소(데이터) 삭제
            배열변수명.splice(삭제할 인덱스, 삭제 갯수)
            배열변수명.splice(삭제할 인덱스, 삭제 갯수, 새로운 값)

        9. 배열내 요소(데이터) 위치 찾기 (찾을 데이터가 존재하면 해당 인덱스 번호 반환, 존재하지 않으면 -1 반환)
            배열변수명.indexOf(찾을 데이터)
*/

// console.log() 개발자도구(크롬F12)에서 데이터 출력할 때 사용하는 함수


// [1] 배열변수 선언
let pointArray = [100 , 50 , 30] 

// [2] 배열변수의 값을 호출
pointArray // 변수의 값을 호출만.
console.log(pointArray) // 변수의 값을 호출, 개발자도구에 출력

// [3] 배열변수의 특정한 위치의 요소(값) 출력
console.log(pointArray[0]) // 0번 인덱스에 존재하는 데이터가 반환됨 => 100
console.log(pointArray[1]) // 1번 인덱스에 존재하는 데이터가 반환됨 => 50
console.log(pointArray[2]) // 2번 인덱스에 존재하는 데이터가 반환됨 => 30


// [생각해보기] 변수, 리터럴, 타입의 갯수와 변수는 몇개를 저장하고 있나?
// [생각해보기-정답] 변수=1개(pointArray) / 리터럴=3개(100,50,30) / 타입=2개(숫자, 배열) / 변수 저장 갯수=배열1개
// 변수는 여러개의 데이터를 갖는 배열타입 1개 저장. / 변수는 무조건 1개의 데이터만 저장 가능


// [4-1] 배열변수의 배열 전체 수정
console.log(pointArray)                        // [100, 50, 30]
pointArray = ['유재석', '강호동']               
console.log(pointArray)                        // ['유재석', '강호동']
// [4-2] 배열변수의 배열 특정 위치 요소(값) 부분 수정
pointArray[0] = '신동엽'                       // 0번째 위치의 값을 '신동엽'으로 변경
console.log(pointArray)                        // ['신동엽', '강호동']

/* [생각해보기] 만약 배열변수가 ['유재석', '강호동'] 수정/변경 되면 기존 100, 50, 30 은 어떻게 될까?
    [정답]
    100, 50, 30 각 데이터(리터럴) 값 : 3개
    [100, 50, 30] : 3개의 데이터를 갖는 참조 배열 1개
    ** 배열은 사라짐. 데이터(리터럴)은 사라지지 않음.
*/

// [5] 배열변수의 데이터(배열내 마지막 인덱스의) 추가 함수 / 배열변수명.push( )
console.log(pointArray)             // ['신동엽', '강호동']
pointArray.push('서장훈')           // ['서장훈'] 데이터 추가
console.log(pointArray)            // ['신동엽', '강호동', '서장훈']

// [6] 배열변수의 요소(데이터) 삭제 함수 / 배열변수명.splice(삭제할 인덱스 번호, 삭제할 갯수, 새로운 값)
// [100, 50, 30] => splice(1,1) => [100, 30]
pointArray.splice(0 , 1)            // 0번 인덱스에 1개를 삭제한다
console.log(pointArray)             // ['강호동', '서장훈']
pointArray.splice(1, 0, '하하')     // 1번 인덱스에 0개 삭제하고 '하하' 대입(중간삽입)한다
console.log(pointArray)             // ['강호동', '하하', '서장훈']

/* [7] 배열변수의 특정 데이터 찾기 함수 / 배열변수명.indexOf(찾을 데이터)
    => 찾을 데이터가 배열내 존재하면 해당 인덱스 번호 반환, 존재하지 않으면 -1 반환
*/
console.log(pointArray.indexOf('서장훈'))       // '서장훈'이라는 문자열 찾기 => 2
console.log(pointArray.indexOf('유재석'))       // '유재석'이라는 문자열 찾기 => -1
// ++함수/연산자는 무조건 1개의 결과를 반환한다
let 결과1 = pointArray.indexOf('하하') 
console.log(결과1)                        // 결과1 = 1
let 결과2 = 3+10;                         
console.log(결과2)                        // 결과2 = 13